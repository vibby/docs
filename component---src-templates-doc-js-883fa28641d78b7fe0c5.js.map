{"version":3,"sources":["webpack:///./src/components/docs/SwitchVersion.js","webpack:///./src/templates/doc.js"],"names":["versions","unshift","current","SwitchVersion","location","currentVersion","onChange","e","targetVersion","versionHelper","getPrefixedVersion","target","value","path","pathname","replace","navigate","doChange","slice","map","version","formattedVersion","correspondingVersion","constants","key","toUpperCase","Template","pageContext","Layout","className","title","rel","href","siteUrl","RegExp","join","name","content","prefixedVersion","property","dangerouslySetInnerHTML","__html","html","urlEditDocumentation","previous","slug","to","next","DocNav","nav","chapters"],"mappings":"+NAMAA,WAASC,QAAQC,WAEjB,IAuCeC,EApBO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,eAAb,OACpB,4BACEC,SAAU,SAACC,GAAD,OArBG,SAACA,EAAGH,EAAUC,GAC7B,IAAMG,EAAgBC,IAAcC,mBAAmBH,EAAEI,OAAOC,OAEhE,GAAIV,YAAYM,EAMhB,GAAI,KAAOH,EAAX,CAMA,IAAMQ,EAAOT,EAASU,SAASC,QAAQV,EAAmBG,EAA7C,KACbQ,mBAASH,OAPT,CACE,IAAMA,EAAOT,EAASU,SAASC,QAAQ,QAA1B,QAA2CP,EAA3C,KACbQ,mBAASH,OARX,CACE,IAAMA,EAAOT,EAASU,SAASC,QAAQV,EAAgB,IACvDW,mBAASH,IAgBQI,CAASV,EAAGH,EAAUC,IACvCO,MAAO,KAAOP,EAAiBH,UAAUG,EAAea,MAAM,GAAI,IAEjElB,WAASmB,KAAI,SAACC,GACb,IAAMC,EAAmBZ,IAAcC,mBAAmBU,GACpDE,EAAuBC,IAAaH,EAAJ,WACtC,OACE,4BAAQI,IAAKH,EAAkBT,MAAOS,IAElCA,GACCC,EAAoB,KAAQb,IAAcC,mBAAmBY,GAAzC,IAAoE,KACzFG,oBC0BGC,UAxDE,SAAC,GAAD,IAAGtB,EAAH,EAAGA,SAAUuB,EAAb,EAAaA,YAAb,OACf,kBAACC,EAAA,EAAD,CAAQxB,SAAUA,GAChB,yBAAKyB,UAAU,cACb,kBAAC,IAAD,CAAQC,MAAQH,EAAYG,OAASH,EAAYG,OAAU,iBACxD,KAAOH,EAAYP,SAChB,CACE,0BACEI,IAAI,YACJO,IAAI,YACJC,KACEC,UACA7B,EAASU,SAASC,QAChB,IAAImB,OAAJ,KAAgBlC,WAASmB,IAAIV,IAAcC,oBAAoByB,KAAK,KAApE,MACA,OAIN,0BAAMX,IAAI,SAASY,KAAK,SAASC,QAAQ,aAG/C,0BACED,KAAK,oBACLC,QACE,KAAOV,EAAYP,QAAUX,IAAcC,mBAAmBL,kBAAkBsB,EAAYW,kBAGhG,0BAAMC,SAAS,iBAAiBF,QAASV,EAAYG,SAEvD,yBAAKD,UAAU,2BACb,kBAAC,EAAD,CAAezB,SAAUA,EAAUC,eAAgBsB,EAAYP,UAC/D,yBAAKoB,wBAAyB,CAAEC,OAAQd,EAAYe,QACpD,yBAAKb,UAAU,uBACb,2BACE,uBAAGG,KAAML,EAAYgB,sBAArB,mEAIN,yBAAKd,UAAU,uBACZF,EAAYiB,SAASC,MACpB,kBAAC,OAAD,CAAMhB,UAAU,OAAOiB,GAAE,GAAKnB,EAAYiB,SAASC,MACjD,0BAAMhB,UAAU,sBAChB,8BAAOF,EAAYiB,SAASd,QAG/BH,EAAYoB,KAAKF,MAChB,kBAAC,OAAD,CAAMhB,UAAU,OAAOiB,GAAE,GAAKnB,EAAYoB,KAAKF,MAC7C,8BAAOlB,EAAYoB,KAAKjB,OACxB,0BAAMD,UAAU,yBAItB,kBAACmB,EAAA,EAAD,CAAQ5B,QAASO,EAAYP,QAAS6B,IAAKtB,EAAYsB,IAAIC,SAAU9C,SAAUA","file":"component---src-templates-doc-js-883fa28641d78b7fe0c5.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { navigate } from 'gatsby';\nimport constants, { current, versions } from '../../../constants';\nimport versionHelper from '../../lib/versionHelper';\n\nversions.unshift(current);\n\nconst doChange = (e, location, currentVersion) => {\n  const targetVersion = versionHelper.getPrefixedVersion(e.target.value);\n\n  if (current === targetVersion) {\n    const path = location.pathname.replace(currentVersion, '');\n    navigate(path);\n    return;\n  }\n\n  if ('' === currentVersion) {\n    const path = location.pathname.replace('docs/', `docs/${targetVersion}/`);\n    navigate(path);\n    return;\n  }\n\n  const path = location.pathname.replace(currentVersion, `${targetVersion}/`);\n  navigate(path);\n};\n\nconst SwitchVersion = ({ location, currentVersion }) => (\n  <select\n    onChange={(e) => doChange(e, location, currentVersion)}\n    value={'' === currentVersion ? current : currentVersion.slice(0, -1)}\n  >\n    {versions.map((version) => {\n      const formattedVersion = versionHelper.getPrefixedVersion(version);\n      const correspondingVersion = constants[`${version}Version`];\n      return (\n        <option key={formattedVersion} value={formattedVersion}>\n          {(\n            formattedVersion +\n            (correspondingVersion ? ` (${versionHelper.getPrefixedVersion(correspondingVersion)})` : '')\n          ).toUpperCase()}\n        </option>\n      );\n    })}\n  </select>\n);\n\nexport default SwitchVersion;\n\nSwitchVersion.propTypes = {\n  location: PropTypes.object.isRequired,\n  currentVersion: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Layout from '../components/Layout';\nimport DocNav from '../components/layout/DocNav';\nimport SwitchVersion from '../components/docs/SwitchVersion';\nimport { currentVersion, siteUrl, versions } from '../../constants';\nimport versionHelper from '../lib/versionHelper';\n\nconst Template = ({ location, pageContext }) => (\n  <Layout location={location}>\n    <div className=\"page__docs\">\n      <Helmet title={(pageContext.title && pageContext.title) || 'Documentation'}>\n        {'' !== pageContext.version\n          ? [\n              <link\n                key=\"canonical\"\n                rel=\"canonical\"\n                href={\n                  siteUrl +\n                  location.pathname.replace(\n                    new RegExp(`/(${versions.map(versionHelper.getPrefixedVersion).join('|')})/`),\n                    '/'\n                  )\n                }\n              />,\n              <meta key=\"robots\" name=\"robots\" content=\"noindex\" />,\n            ]\n          : false}\n        <meta\n          name=\"docsearch:version\"\n          content={\n            '' === pageContext.version ? versionHelper.getPrefixedVersion(currentVersion) : pageContext.prefixedVersion\n          }\n        />\n        <meta property=\"og:description\" content={pageContext.title} />\n      </Helmet>\n      <div className=\"container docs__content\">\n        <SwitchVersion location={location} currentVersion={pageContext.version} />\n        <div dangerouslySetInnerHTML={{ __html: pageContext.html }} />\n        <div className=\"docs__content__help\">\n          <p>\n            <a href={pageContext.urlEditDocumentation}>You can also help us improve the documentation of this page.</a>\n          </p>\n        </div>\n      </div>\n      <div className=\"container docs__nav\">\n        {pageContext.previous.slug && (\n          <Link className=\"prev\" to={`${pageContext.previous.slug}`}>\n            <span className=\"icon-chevron-left\" />\n            <span>{pageContext.previous.title}</span>\n          </Link>\n        )}\n        {pageContext.next.slug && (\n          <Link className=\"next\" to={`${pageContext.next.slug}`}>\n            <span>{pageContext.next.title}</span>\n            <span className=\"icon-chevron-right\" />\n          </Link>\n        )}\n      </div>\n      <DocNav version={pageContext.version} nav={pageContext.nav.chapters} location={location} />\n    </div>\n  </Layout>\n);\n\nexport default Template;\n\nTemplate.propTypes = {\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired,\n};\n"],"sourceRoot":""}