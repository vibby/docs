{"version":3,"sources":["webpack:///./src/components/common/Grid.js","webpack:///./src/components/community/BigContributor.js","webpack:///./src/pages/community/contributors.js","webpack:///./src/types.js","webpack:///./src/helpers/contributorHelper.js","webpack:///./src/images/contributors.svg"],"names":["Grid","left","children","className","classnames","defaultProps","GridItem","padding","limitWidth","full","autosize","auto","BigContributor","contributor","size","to","login","src","avatar","alt","version","viewBox","preserveAspectRatio","cx","cy","r","isCoreTeam","title","position","contributions","query","ContributorsPage","location","data","contributors","allContributor","nodes","firstContributor","shift","topContributors","splice","Contributors","totalCount","map","key","loading","lines","PropTypes","shape","local_date","string","local_time","name","venue","city","featured_photo","photo_link","status","link","profile_url","id","number","project","teams","includes","getName","module","exports"],"mappings":"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","file":"component---src-pages-community-contributors-js-ecf6f83c7e1e5c9e1dc5.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport const Grid = ({ left, children, className }) => (\n  <div className={classnames(className, 'grid__container', { left })}>{children}</div>\n);\n\nGrid.propTypes = {\n  left: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nGrid.defaultProps = {\n  left: false,\n  className: '',\n};\n\nexport const GridItem = ({ className, padding, limitWidth, full, children, autosize }) => (\n  <div\n    className={classnames(className, 'grid__item', {\n      [`p-${padding}`]: padding,\n      'no-min': !limitWidth,\n      auto: autosize,\n      full,\n    })}\n  >\n    {children}\n  </div>\n);\n\nGridItem.propTypes = {\n  full: PropTypes.bool,\n  padding: PropTypes.number,\n  limitWidth: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  autosize: PropTypes.bool,\n};\n\nGridItem.defaultProps = {\n  full: false,\n  limitWidth: true,\n  padding: null,\n  className: '',\n  autosize: false,\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { ContributorType } from '../../types';\nimport { isCoreTeam } from '../../helpers/contributorHelper';\n\nconst BigContributor = ({ contributor, size }) => (\n  <Link\n    to={`/community/contributors/${contributor.login}`}\n    className={classnames('card contributor__top transparent p-10', {\n      [size]: size,\n      'full-row': 'big' === size,\n    })}\n  >\n    <div className=\"contributor__picture\">\n      <div className=\"avatar bordered bg-grey-light crop medium\">\n        <img className=\"contributor__image\" src={contributor.avatar} alt={contributor.login} />\n        <svg version=\"1.1\" viewBox=\"0 0 520 520\" preserveAspectRatio=\"xMinYMin meet\">\n          <circle cx=\"260\" cy=\"260\" r=\"250\" />\n        </svg>\n      </div>\n      {isCoreTeam(contributor) && (\n        <img className=\"contributor__badge\" src=\"/badges/core-team.svg\" alt=\"core-team\" title=\"Core team member\" />\n      )}\n    </div>\n    <div className=\"card__content\">\n      <h3 className=\"card__title\">{`#${contributor.position} ${contributor.login}`}</h3>\n      <div className=\"contributor__statistic\">\n        <p className=\"statistic__value\">{contributor.contributions}</p>\n        <p className=\"statistic__title\">{1 < contributor.contributions ? 'contributions' : 'contribution'}</p>\n      </div>\n    </div>\n  </Link>\n);\n\nBigContributor.propTypes = {\n  contributor: ContributorType.isRequired,\n  size: PropTypes.string,\n};\n\nBigContributor.defaultProps = {\n  size: 'medium',\n};\n\nexport default BigContributor;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport Contributors from '../../images/contributors.svg';\nimport { ContributorType } from '../../types';\nimport BigContributor from '../../components/community/BigContributor';\nimport Layout from '../../components/Layout';\nimport { Grid, GridItem } from '../../components/common/Grid';\nimport { isCoreTeam } from '../../helpers/contributorHelper';\n\nconst ContributorsPage = ({ location, data }) => {\n  const contributors = [...data.allContributor.nodes];\n\n  const firstContributor = contributors.shift();\n  const topContributors = contributors.splice(0, 9);\n\n  return (\n    <Layout location={location}>\n      <div className=\"contributors\">\n        <Helmet title=\"Contributors\" />\n        <header className=\"contributors__header page__header-overlaid bg-blue-extralight color-blue-extradark\">\n          <div className=\"container\">\n            <div className=\"contributors__title\">\n              <img src={Contributors} alt=\"contributor\" />\n              <div>\n                <h1 className=\"page__title\">\n                  Our <strong className=\"color-blue-dark\">contributors</strong>\n                </h1>\n                <p className=\"page__subtitle h4-like\">{`${data.allContributor.totalCount} people have contributed to API Platform code.`}</p>\n              </div>\n              <img src={Contributors} alt=\"contributor\" />\n            </div>\n          </div>\n        </header>\n        <section className=\"contributors__top\">\n          <div className=\"container\">\n            <h2 className=\"accessibility__hidden-block\">Top contributors</h2>\n            <Grid className=\"top__grid\">\n              <GridItem full padding={10}>\n                {firstContributor && <BigContributor contributor={firstContributor} size=\"big\" />}\n              </GridItem>\n              {topContributors.map((contributor) => (\n                <GridItem key={contributor.login} padding={10}>\n                  <BigContributor contributor={contributor} />\n                </GridItem>\n              ))}\n            </Grid>\n          </div>\n        </section>\n        <section className=\"contributors__all\">\n          <div className=\"container\">\n            <h2 className=\"contributors-all__title\">All contributors</h2>\n            <Grid>\n              {contributors.map((contributor) => (\n                <GridItem key={contributor.login} padding={10}>\n                  <Link\n                    to={`/community/contributors/${contributor.login}`}\n                    className=\"contributor__card card clickable horizontal small p-10\"\n                  >\n                    <div className=\"avatar crop xsmall\">\n                      <img loading=\"lazy\" src={contributor.avatar} alt={contributor.login} />\n                    </div>\n                    <div className=\"card__content\">\n                      <h3 className=\"card__title text-big\">{`#${contributor.position} | ${contributor.login}`}</h3>\n                      <p className=\"contributor__contributions text-xs\">{`${contributor.contributions} ${\n                        1 < contributor.contributions ? 'contributions' : 'contribution'\n                      }`}</p>\n                      <p className=\"contributor__lines text-xs\">\n                        {contributor.lines ? (\n                          <span>{`${contributor.lines} lines`}</span>\n                        ) : (\n                          <span className=\"no-stat\">(no stats)</span>\n                        )}\n                      </p>\n                    </div>\n                    {isCoreTeam(contributor) && (\n                      <img\n                        className=\"contributor__badge\"\n                        src=\"/badges/core-team.svg\"\n                        alt=\"core-team\"\n                        title=\"Core team member\"\n                      />\n                    )}\n                  </Link>\n                </GridItem>\n              ))}\n            </Grid>\n          </div>\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nContributorsPage.propTypes = {\n  data: PropTypes.shape({\n    allContributor: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      nodes: PropTypes.arrayOf(ContributorType),\n    }),\n  }).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n  query {\n    allContributor(filter: { login: { ne: \"dummy-api-platform\" } }) {\n      totalCount\n      nodes {\n        id\n        login\n        avatar\n        profile_url\n        contributions\n        position\n        lines\n        teams\n      }\n    }\n  }\n`;\n\nexport default ContributorsPage;\n","import PropTypes from 'prop-types';\n\nexport const MeetupEventType = PropTypes.shape({\n  local_date: PropTypes.string,\n  local_time: PropTypes.string,\n  name: PropTypes.string,\n  venue: PropTypes.shape({\n    name: PropTypes.string,\n    city: PropTypes.string,\n  }),\n  featured_photo: PropTypes.shape({\n    photo_link: PropTypes.string,\n  }),\n  status: PropTypes.string,\n  link: PropTypes.string,\n});\n\nexport const ContributorType = PropTypes.shape({\n  login: PropTypes.string,\n  avatar: PropTypes.string,\n  profile_url: PropTypes.string,\n  id: PropTypes.string,\n  contributions: PropTypes.number,\n  project: PropTypes.shape({\n    name: PropTypes.string,\n    link: PropTypes.string,\n  }),\n  position: PropTypes.number,\n});\n","export const isCoreTeam = (contributor) =>\n  contributor.teams &&\n  (contributor.teams.includes('core-team') ||\n    contributor.teams.includes('core-team-js') ||\n    contributor.teams.includes('core-team-website'));\n\nexport const getName = (contributor) => contributor.name || contributor.login;\n","module.exports = __webpack_public_path__ + \"static/contributors-1ef4f4ab8ed0222f8caffb95c84e65c6.svg\";"],"sourceRoot":""}